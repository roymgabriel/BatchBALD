store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.1854, 'nll': 2.218787109375}, 'chosen_targets': [0, 8, 2, 2, 6, 0, 6, 2, 0, 6, 9, 0, 0, 9, 7, 9, 6, 9, 0, 8, 0, 7, 6, 8, 6, 0, 8, 6, 0, 0, 5, 4, 0, 2, 6, 9, 0, 0, 3, 6], 'chosen_samples': [22583, 35018, 5103, 5397, 45113, 52609, 12393, 3659, 38161, 29255, 8585, 2629, 54351, 32417, 2491, 7647, 40515, 53020, 18658, 48037, 27206, 41054, 33305, 46330, 41963, 42063, 53248, 14051, 51301, 9473, 24426, 6865, 34099, 14363, 2570, 50304, 36107, 46785, 37797, 44420], 'chosen_samples_score': [0.9922890508039532, 1.318311823428878, 1.5488411014683288, 1.720208750137484, 1.8439122171131168, 1.9246115764807321, 2.0146740426980214, 2.108683369393356, 2.112908994589267, 2.147865270891634, 2.176870544602478, 2.206649924683976, 2.2221036515739456, 2.227423312411325, 2.2533702501815185, 2.2807974032297764, 2.2698996216387926, 2.2629268740436075, 2.242279275440879, 2.294590380337457, 2.3093000578783993, 2.2519717999867837, 2.3016340254369965, 2.271392717180319, 2.240726034724588, 2.2910438768047854, 2.3192826615704476, 2.2788859109171895, 2.2710549261698887, 2.269715459440576, 2.323246837165442, 2.2639205190897584, 2.3063875262909903, 2.2992626982044797, 2.2941974603936828, 2.328638677842484, 2.3069746802747773, 2.2937537703955613, 2.2976787952937556, 2.318769887411868], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.0511407980229706, 'batch_acquisition_elapsed_time': 78.51233221194707})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.1294, 'nll': 2.2980369140625}, 'chosen_targets': [6, 6, 3, 6, 0, 2, 0, 6, 6, 0, 2, 6, 4, 7, 0, 0, 6, 0, 0, 2, 0, 5, 6, 4, 6, 6, 0, 5, 0, 4, 7, 7, 9, 6, 7, 0, 0, 6, 5, 0], 'chosen_samples': [40157, 13845, 16676, 16131, 16921, 25437, 12103, 19293, 42207, 21141, 29312, 9341, 47028, 30433, 23067, 27427, 18530, 58934, 6023, 4733, 43247, 57242, 37044, 59465, 49659, 1466, 20863, 21919, 19261, 46245, 1437, 37811, 19300, 29489, 23352, 18893, 825, 14248, 40194, 34699], 'chosen_samples_score': [0.513655926057504, 0.8759065690181005, 1.1566025092951837, 1.3680586852204368, 1.5298092621865331, 1.6492206586854277, 1.7603988036718992, 1.8636316277062654, 1.9401856031599447, 1.9971814281775728, 2.016041430829832, 2.0694951120516567, 2.0836499886135265, 2.167983302249663, 2.14116033193217, 2.182097832219359, 2.1843957057340617, 2.2282375050794307, 2.2334930542438656, 2.228512253873614, 2.2187116117324166, 2.246361437046822, 2.2341109690491514, 2.249124668406047, 2.276800368709864, 2.261940295832467, 2.285728501188295, 2.265554869657308, 2.279746202248738, 2.2501447422594154, 2.310848039798728, 2.3108907374498884, 2.294830090059506, 2.284547002819167, 2.289684485490689, 2.3172758373532787, 2.283546218282197, 2.2953190641222037, 2.288622039885489, 2.29743591649229], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.4355543369892985, 'batch_acquisition_elapsed_time': 77.26156352716498})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.1332, 'nll': 2.407840234375}, 'chosen_targets': [0, 0, 0, 0, 6, 4, 4, 6, 6, 0, 4, 0, 4, 6, 6, 4, 2, 0, 4, 0, 6, 6, 4, 6, 4, 4, 9, 2, 0, 2, 7, 0, 2, 4, 4, 6, 4, 0, 6, 2], 'chosen_samples': [3262, 18222, 4218, 49639, 55645, 33787, 56856, 22789, 41477, 45617, 56825, 57120, 31750, 30904, 16788, 4593, 44377, 3964, 55004, 37814, 39369, 33751, 1050, 8683, 40450, 8580, 44553, 28347, 54997, 8473, 6397, 51006, 59579, 48853, 16802, 20647, 17444, 48554, 28163, 8097], 'chosen_samples_score': [0.5683189352580045, 0.9420011215937196, 1.2069334532625695, 1.41696484209008, 1.5883828307462369, 1.719701994448747, 1.824252514186595, 1.9235181223709432, 1.967910549655814, 2.0396023050554657, 2.068545273893129, 2.104756952229831, 2.1603212234345044, 2.167500393045149, 2.152559089575835, 2.245668813815321, 2.2007336114932947, 2.2212309967683197, 2.2205469174541648, 2.2451751514838634, 2.259162188489128, 2.2856229852582004, 2.287418612325528, 2.284901641908366, 2.2924610424161145, 2.2797106345639975, 2.3212030652799385, 2.2700183431385526, 2.3012581071439726, 2.2946645375259322, 2.3187024072363656, 2.303338027200496, 2.2963248953996356, 2.280642976190258, 2.241841259804552, 2.273058174357068, 2.323764048480527, 2.3069868654524086, 2.2953999493116797, 2.2816089076554107], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.4996330139692873, 'batch_acquisition_elapsed_time': 76.73378819110803})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.1462, 'nll': 2.4660099609375}, 'chosen_targets': [0, 0, 9, 0, 8, 2, 6, 0, 0, 8, 0, 0, 7, 6, 0, 0, 6, 4, 0, 0, 0, 0, 4, 2, 0, 0, 2, 0, 0, 6, 0, 6, 0, 0, 9, 8, 2, 2, 0, 0], 'chosen_samples': [45061, 3709, 36122, 55130, 12633, 59355, 10275, 35896, 36277, 40467, 6923, 19547, 34899, 28898, 34416, 41465, 8417, 13183, 41617, 31350, 18759, 28593, 49195, 34226, 20418, 39856, 35031, 57201, 1363, 30128, 53073, 1091, 1367, 51809, 19824, 5633, 39467, 29413, 36667, 46183], 'chosen_samples_score': [0.531840455354571, 0.8568224645970037, 1.1092211373572818, 1.3011986284374268, 1.4683944182709423, 1.6032233017234896, 1.6922982549909635, 1.78205390620192, 1.868740114166748, 1.9096489084560808, 2.0000757966632854, 2.0463249037587588, 2.058494192106597, 2.0780703377529086, 2.11847475084301, 2.1507263309815627, 2.175275910440348, 2.174466250326958, 2.195176475657725, 2.2049253991473172, 2.20904014985247, 2.2033515037430753, 2.2502141789159857, 2.2253255181583995, 2.2137230805105546, 2.2375443449032133, 2.2453400649088735, 2.240445899179086, 2.290007408262319, 2.2681237501348974, 2.273364543551878, 2.280139279714426, 2.257868335611356, 2.290362848376766, 2.2886672694229446, 2.2824581357568974, 2.269652337611653, 2.2839540087196752, 2.3203632646525207, 2.266862915024042], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 428.51883171801455, 'batch_acquisition_elapsed_time': 76.03976892493665})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
