store = {}
store['args']={'experiment_description': 'COVID BINARY:RESNET BN DROPOUT RANDOM (SCRATCH)', 'batch_size': 16, 'scoring_batch_size': 32, 'test_batch_size': 64, 'validation_set_size': 500, 'early_stopping_patience': 3, 'epochs': 30, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 20, 'target_num_acquired_samples': 1000, 'target_accuracy': 0.9375, 'quickquick': False, 'seed': 254, 'log_interval': 20, 'initial_samples_per_class': 25, 'initial_samples': None, 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 3, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'no_cuda': False, 'experiment_task_id': 'covid_full_resnet_binary_scratch_random_254', 'experiments_laaos': './experiment_configs/EMORY_COVID/scratch_binary_config.py', 'type': 'AcquisitionFunction.random', 'acquisition_method': 'AcquisitionMethod.independent', 'dataset': 'DatasetEnum.covid_binary'}
store['cmdline']=['MIP/BatchBALD/src/run_experiment.py', '--experiment_task_id=covid_full_resnet_binary_scratch_random_254', '--experiments_laaos=./experiment_configs/EMORY_COVID/scratch_binary_config.py', '--dataset=covid_binary', '--type=random', '--acquisition_method=independent']
# store['Distribution of training set classes:']={1: 1400, 0: 223}
# store['Distribution of validation set classes:']={1: 194, 0: 38}
# store['Distribution of test set classes:']={1: 399, 0: 65}
# store['Distribution of pool classes:']={1: 1375, 0: 198}
# store['Distribution of active set classes:']={1: 25, 0: 25}
# store['active samples']=50
# store['available samples']=1573
# store['validation samples']=232
# store['test samples']=464
store['iterations']=[]
store['initial_samples']=[298, 805, 1312, 1018, 966, 1290, 964, 1260, 1475, 1583, 949, 631, 503, 394, 1442, 1164, 492, 942, 1365, 853, 710, 1120, 1382, 352, 1381, 696, 913, 1353, 130, 1429, 390, 1499, 73, 1109, 79, 1487, 567, 316, 416, 1601, 925, 1009, 1160, 211, 1576, 1390, 662, 1096, 1110, 813]
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.8706896551724138, 'nll': 1.3059206995470771, 'f1': 0.7087256748273697, 'precision': 0.7297892852224211, 'recall': 0.6930017351069983, 'ROC_AUC': 0.7857019381480588, 'PRC_AUC': 0.963219356279152}, 'chosen_targets': [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], 'chosen_samples': [821, 787, 1432, 802, 534, 308, 9, 1093, 1352, 1211, 1096, 1156, 411, 609, 1247, 650, 1277, 1433, 1038, 1269], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 161.50270703667775, 'batch_acquisition_elapsed_time': 0.000577826052904129})
store['iterations'].append({'num_epochs': 6, 'test_metrics': {'accuracy': 0.8793103448275862, 'nll': 1.6146452015843884, 'f1': 0.749527665317139, 'precision': 0.749527665317139, 'recall': 0.749527665317139, 'ROC_AUC': 0.8309915365339217, 'PRC_AUC': 0.9697189881288153}, 'chosen_targets': [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], 'chosen_samples': [470, 791, 728, 655, 1259, 281, 1009, 503, 138, 1047, 547, 1108, 128, 1026, 730, 1118, 1357, 1038, 763, 268], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 241.73476089304313, 'batch_acquisition_elapsed_time': 0.0004853159189224243})
store['iterations'].append({'num_epochs': 8, 'test_metrics': {'accuracy': 0.9073275862068966, 'nll': 1.0369075248981345, 'f1': 0.80386721322756, 'precision': 0.8101027122452255, 'recall': 0.7980142664353191, 'ROC_AUC': 0.8583586502719643, 'PRC_AUC': 0.9786862767146124}, 'chosen_targets': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], 'chosen_samples': [747, 1316, 1221, 1016, 1227, 1379, 1293, 794, 883, 920, 1052, 1456, 1453, 742, 441, 78, 654, 1089, 283, 95], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 320.49388917535543, 'batch_acquisition_elapsed_time': 0.0005771559663116932})
store['iterations'].append({'num_epochs': 7, 'test_metrics': {'accuracy': 0.9030172413793104, 'nll': 0.8501361320758688, 'f1': 0.7861685458846663, 'precision': 0.8061974789915967, 'recall': 0.7697513013302487, 'ROC_AUC': 0.878781249614583, 'PRC_AUC': 0.9818762825700353}, 'chosen_targets': [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], 'chosen_samples': [932, 170, 84, 603, 659, 1437, 544, 1038, 657, 1004, 1384, 894, 351, 168, 906, 47, 42, 1399, 486, 1122], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 282.06892720935866, 'batch_acquisition_elapsed_time': 0.0005562608130276203})
store['iterations'].append({'num_epochs': 7, 'test_metrics': {'accuracy': 0.8771551724137931, 'nll': 0.5361118645503603, 'f1': 0.7769512966476912, 'precision': 0.7501208897485493, 'recall': 0.8191054559475612, 'ROC_AUC': 0.8980723361709952, 'PRC_AUC': 0.9873871356654522}, 'chosen_targets': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'chosen_samples': [568, 1427, 816, 1260, 1197, 352, 1263, 1088, 433, 441, 950, 1301, 1007, 1150, 400, 30, 92, 643, 365, 1404], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 282.14311895379797, 'batch_acquisition_elapsed_time': 0.0005570398643612862})
store['iterations'].append({'num_epochs': 6, 'test_metrics': {'accuracy': 0.9267241379310345, 'nll': 0.68429525967302, 'f1': 0.8552926068611264, 'precision': 0.8395403426409277, 'recall': 0.8736842105263158, 'ROC_AUC': 0.9240958230697215, 'PRC_AUC': 0.9899763258958278}, 'chosen_targets': [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'chosen_samples': [1285, 737, 750, 1105, 1353, 96, 828, 1156, 255, 1035, 188, 477, 1248, 186, 1314, 781, 107, 821, 778, 235], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 243.12834553001449, 'batch_acquisition_elapsed_time': 0.0006429841741919518})
store['iterations'].append({'num_epochs': 8, 'test_metrics': {'accuracy': 0.9137931034482759, 'nll': 1.871899571912042, 'f1': 0.7834204630321135, 'precision': 0.8714328808446455, 'recall': 0.7373819163292847, 'ROC_AUC': 0.9172763266692865, 'PRC_AUC': 0.974767676494401}, 'chosen_targets': [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], 'chosen_samples': [78, 1148, 969, 28, 532, 63, 294, 669, 184, 1443, 1271, 1344, 749, 1352, 1332, 248, 875, 584, 1230, 1342], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 322.17779725277796, 'batch_acquisition_elapsed_time': 0.0005823718383908272})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.9030172413793104, 'nll': 1.2585176928290005, 'f1': 0.7583752820690852, 'precision': 0.8337264150943396, 'recall': 0.7182379024484288, 'ROC_AUC': 0.8915871848546657, 'PRC_AUC': 0.9739397195654048}, 'chosen_targets': [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], 'chosen_samples': [800, 595, 1264, 24, 900, 416, 42, 1191, 17, 269, 890, 1321, 1206, 1362, 407, 1426, 318, 1076, 659, 1017], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 162.66420617420226, 'batch_acquisition_elapsed_time': 0.0005921400152146816})
store['iterations'].append({'num_epochs': 9, 'test_metrics': {'accuracy': 0.9094827586206896, 'nll': 0.5397294800857018, 'f1': 0.8212438084755092, 'precision': 0.8070279928528886, 'recall': 0.8379024484287643, 'ROC_AUC': 0.9048874023574693, 'PRC_AUC': 0.9876498771839692}, 'chosen_targets': [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], 'chosen_samples': [852, 1188, 1048, 1071, 118, 299, 71, 1295, 1182, 22, 366, 290, 1388, 1364, 238, 158, 647, 407, 713, 953], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 361.15051690209657, 'batch_acquisition_elapsed_time': 0.000588816124945879})
store['iterations'].append({'num_epochs': 9, 'test_metrics': {'accuracy': 0.9202586206896551, 'nll': 0.7979058232800714, 'f1': 0.8241830266162811, 'precision': 0.8468137254901961, 'recall': 0.8055330634278003, 'ROC_AUC': 0.9108835819707467, 'PRC_AUC': 0.9898632552303918}, 'chosen_targets': [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], 'chosen_samples': [193, 973, 9, 756, 10, 784, 282, 434, 1369, 64, 38, 1152, 1276, 881, 1000, 1020, 149, 271, 1285, 1351], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 362.130394492764, 'batch_acquisition_elapsed_time': 0.000562621746212244})
store['iterations'].append({'num_epochs': 12, 'test_metrics': {'accuracy': 0.9137931034482759, 'nll': 0.34699147323082236, 'f1': 0.8356009070294783, 'precision': 0.812230807167516, 'recall': 0.8661654135338346, 'ROC_AUC': 0.908618786891057, 'PRC_AUC': 0.9886995755698557}, 'chosen_targets': [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'chosen_samples': [1122, 152, 1178, 705, 1370, 1115, 91, 455, 852, 1105, 752, 1062, 538, 267, 405, 342, 751, 40, 558, 953], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 481.8788337330334, 'batch_acquisition_elapsed_time': 0.0005253758281469345})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.8642241379310345, 'nll': 4.585491838126347, 'f1': 0.5068077137217188, 'precision': 0.807608695652174, 'recall': 0.5218237902448428, 'ROC_AUC': 0.8739558683919315, 'PRC_AUC': 0.978723414170116}, 'chosen_targets': [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], 'chosen_samples': [1085, 132, 167, 950, 919, 1128, 702, 633, 36, 1340, 913, 983, 915, 1113, 881, 1108, 978, 774, 1286, 520], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 162.98782725911587, 'batch_acquisition_elapsed_time': 0.0004979190416634083})
store['iterations'].append({'num_epochs': 6, 'test_metrics': {'accuracy': 0.8599137931034483, 'nll': 8.591586408943966, 'f1': 0.9246813441483198, 'precision': 0.42995689655172414, 'recall': 0.5, 'ROC_AUC': 0.8701649105205139, 'PRC_AUC': 0.9589418219123559}, 'chosen_targets': [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], 'chosen_samples': [199, 986, 1246, 903, 763, 869, 393, 1308, 1263, 660, 543, 1306, 1142, 843, 291, 856, 853, 622, 326, 270], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 243.05256960866973, 'batch_acquisition_elapsed_time': 0.0005365251563489437})
store['iterations'].append({'num_epochs': 12, 'test_metrics': {'accuracy': 0.9439655172413793, 'nll': 0.42775262635329675, 'f1': 0.878992136093725, 'precision': 0.8955011508683826, 'recall': 0.864391748602275, 'ROC_AUC': 0.9157342381791616, 'PRC_AUC': 0.9926792294983928}, 'chosen_targets': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'chosen_samples': [105, 1224, 1, 979, 921, 947, 457, 386, 56, 378, 651, 495, 1212, 1256, 1196, 646, 1041, 39, 763, 1160], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 480.87561445869505, 'batch_acquisition_elapsed_time': 0.0005770600400865078})
