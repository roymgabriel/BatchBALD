store = {}
store['args']={'experiment_description': 'RSNA MULTI:RESNET BN DROPOUT MULTI BALD (SCRATCH)', 'batch_size': 32, 'scoring_batch_size': 128, 'test_batch_size': 128, 'validation_set_size': 5000, 'early_stopping_patience': 3, 'epochs': 30, 'epoch_samples': 5056, 'num_inference_samples': 50, 'available_sample_k': 10, 'target_num_acquired_samples': 250, 'target_accuracy': 0.9, 'quickquick': False, 'seed': 58, 'log_interval': 20, 'initial_samples_per_class': 10, 'initial_samples': None, 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 1, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': True, 'balanced_test_set': False, 'no_cuda': False, 'experiment_task_id': 'mnist_full_resnet_multi_scratch_multibald_58', 'experiments_laaos': './experiment_configs/MNIST/scratch_multi_config.py', 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist'}
store['cmdline']=['MIP/BatchBALD/src/run_experiment.py', '--experiment_task_id=mnist_full_resnet_multi_scratch_multibald_58', '--experiments_laaos=./experiment_configs/MNIST/scratch_multi_config.py', '--dataset=mnist', '--type=bald', '--acquisition_method=multibald']
# store['Distribution of training set classes:']={5: 5421, 0: 5923, 4: 5842, 1: 6742, 9: 5949, 2: 5958, 3: 6131, 6: 5918, 7: 6265, 8: 5851}
# store['Distribution of validation set classes:']={6: 500, 0: 500, 4: 500, 7: 500, 1: 500, 8: 500, 2: 500, 5: 500, 3: 500, 9: 500}
# store['Distribution of test set classes:']={7: 1028, 2: 1032, 1: 1135, 0: 980, 4: 982, 9: 1009, 5: 892, 6: 958, 3: 1010, 8: 974}
# store['Distribution of pool classes:']={5: 4911, 4: 5332, 1: 6232, 9: 5439, 2: 5448, 3: 5621, 6: 5408, 7: 5755, 8: 5341, 0: 5413}
# store['Distribution of active set classes:']={7: 10, 6: 10, 0: 10, 1: 10, 3: 10, 8: 10, 4: 10, 2: 10, 9: 10, 5: 10}
# store['active samples']=100
# store['available samples']=54900
# store['validation samples']=5000
# store['test samples']=10000
store['iterations']=[]
store['initial_samples']=[16515, 39247, 40458, 15972, 57627, 21510, 31394, 15693, 26902, 29993, 37132, 11874, 42054, 8808, 45699, 5770, 28734, 22293, 30379, 8228, 25983, 45006, 23693, 2159, 36095, 53627, 48629, 2355, 13474, 20506, 46759, 57124, 56658, 46720, 35147, 59850, 21233, 35062, 47972, 17819, 1897, 44777, 11902, 32800, 10022, 9881, 5317, 44692, 22707, 7557, 30344, 58611, 48383, 44828, 52242, 45216, 39592, 15279, 59317, 35071, 52430, 32516, 15724, 14872, 39378, 6957, 27636, 56378, 51008, 29342, 19488, 57036, 1536, 58998, 25068, 25337, 26958, 17344, 21854, 32003, 49072, 20484, 42587, 17590, 36742, 39435, 44013, 35229, 47805, 13385, 54066, 11274, 49507, 56233, 3283, 9711, 634, 13513, 52587, 49921]
store['iterations'].append({'num_epochs': 10, 'test_metrics': {'accuracy': 0.851, 'nll': 0.8390025390625, 'f1': 0.8492601249668837, 'precision': 0.8543571420254249, 'recall': 0.8496868234820274, 'ROC_AUC': 0.9628702799479167, 'PRC_AUC': 0.8718742099412631}, 'chosen_targets': [6, 6, 4, 6, 6, 3, 8, 0, 4, 3], 'chosen_samples': [49426, 17728, 35429, 8898, 42490, 11155, 52671, 51629, 46305, 4795], 'chosen_samples_score': [0.11522367037553438, 0.21805696375025918, 0.31290761534681644, 0.40267538315554163, 0.48878631757970803, 0.5650947930647527, 0.6396642868000528, 0.7420461163301182, 0.7945718549662342, 0.8581480772962164], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 65.65740821370855, 'batch_acquisition_elapsed_time': 333.8053661575541})
store['iterations'].append({'num_epochs': 13, 'test_metrics': {'accuracy': 0.856, 'nll': 0.762993310546875, 'f1': 0.8535458180292901, 'precision': 0.8587624002699528, 'recall': 0.8543929629172704, 'ROC_AUC': 0.9689466688368055, 'PRC_AUC': 0.9051641522428331}, 'chosen_targets': [4, 7, 3, 0, 4, 3, 7, 3, 4, 5], 'chosen_samples': [9148, 50664, 26929, 14752, 10549, 53345, 25806, 11233, 3312, 31554], 'chosen_samples_score': [0.1392629966741077, 0.2636197595837557, 0.38211848664495895, 0.4947063322851162, 0.6039879802845207, 0.7135151505252275, 0.7958570774738662, 0.8951890124186281, 0.9877584492076092, 1.0867628088024208], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 80.03882918786258, 'batch_acquisition_elapsed_time': 332.50930602429435})
store['iterations'].append({'num_epochs': 15, 'test_metrics': {'accuracy': 0.8678, 'nll': 0.687837646484375, 'f1': 0.865967587908138, 'precision': 0.868900856113689, 'recall': 0.8661913826209791, 'ROC_AUC': 0.9728969997829862, 'PRC_AUC': 0.9204872025064126}, 'chosen_targets': [8, 9, 8, 5, 5, 7, 3, 0, 9, 5], 'chosen_samples': [21406, 41274, 56593, 6610, 44736, 41677, 53156, 42180, 38182, 41094], 'chosen_samples_score': [0.17715912835173975, 0.31936098328263307, 0.4436404977149411, 0.5656899457156426, 0.6769307228998351, 0.7653521265924863, 0.8855053752985307, 0.9649475022625413, 1.0593275197713652, 1.1525018566134442], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 92.9454158237204, 'batch_acquisition_elapsed_time': 332.3648782549426})
store['iterations'].append({'num_epochs': 10, 'test_metrics': {'accuracy': 0.8764, 'nll': 0.624835888671875, 'f1': 0.8759003901871466, 'precision': 0.8782107788792995, 'recall': 0.8763479937710075, 'ROC_AUC': 0.9752604166666667, 'PRC_AUC': 0.9228451580588752}, 'chosen_targets': [8, 8, 9, 0, 8, 2, 0, 7, 9, 8], 'chosen_samples': [9152, 42238, 38562, 2817, 10515, 26461, 33350, 25888, 18680, 48329], 'chosen_samples_score': [0.12318083404652747, 0.23448918684711817, 0.3455801655143378, 0.4546101069942985, 0.5581885530123687, 0.6703939091313202, 0.7473627426330793, 0.8328914295950538, 0.9193338386591332, 1.022295018686033], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 61.898820660077035, 'batch_acquisition_elapsed_time': 332.35921366885304})
store['iterations'].append({'num_epochs': 9, 'test_metrics': {'accuracy': 0.8829, 'nll': 0.604434521484375, 'f1': 0.8814066979746767, 'precision': 0.8843359555729572, 'recall': 0.881820035450894, 'ROC_AUC': 0.9770134819878473, 'PRC_AUC': 0.9096339073778947}, 'chosen_targets': [3, 2, 6, 3, 2, 8, 5, 0, 8, 3], 'chosen_samples': [2430, 3486, 49403, 41048, 37568, 11950, 6524, 44411, 3407, 58324], 'chosen_samples_score': [0.1336724825917961, 0.23978054991273012, 0.33810588559361343, 0.42998793566154747, 0.5199074108301183, 0.6024346508785285, 0.6993571756689825, 0.760533483725192, 0.8634191032109584, 0.9436806238062942], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 56.463314765132964, 'batch_acquisition_elapsed_time': 332.2182581727393})
store['iterations'].append({'num_epochs': 9, 'test_metrics': {'accuracy': 0.8906, 'nll': 0.55229052734375, 'f1': 0.8896108760286253, 'precision': 0.893135628378802, 'recall': 0.8904119783097197, 'ROC_AUC': 0.9779764811197919, 'PRC_AUC': 0.9238550933968538}, 'chosen_targets': [3, 3, 0, 7, 5, 0, 9, 3, 6, 7], 'chosen_samples': [7046, 33371, 31112, 24049, 24579, 12219, 26703, 27389, 35729, 30286], 'chosen_samples_score': [0.12232292041117887, 0.23404220924451957, 0.3435112642985514, 0.44738000748696205, 0.5498038328548773, 0.6451670258215776, 0.7398356980696041, 0.8142000257388782, 0.9077447670143286, 0.9966999854114809], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 56.60697028506547, 'batch_acquisition_elapsed_time': 331.9627521811053})
store['iterations'].append({'num_epochs': 9, 'test_metrics': {'accuracy': 0.908, 'nll': 0.45578798828125, 'f1': 0.9068817704749927, 'precision': 0.9076783526799144, 'recall': 0.9078407738178941, 'ROC_AUC': 0.9827507866753472, 'PRC_AUC': 0.9493984760911928}, 'chosen_targets': [2, 2, 2, 9, 4, 5, 1, 4, 2, 2], 'chosen_samples': [34718, 49164, 45745, 6368, 17478, 29712, 47583, 21503, 20710, 47499], 'chosen_samples_score': [0.11592733498132768, 0.21753558245216753, 0.31056110467371445, 0.4014527270346786, 0.4867307790587332, 0.5694738094641756, 0.6392454946670343, 0.726530982638395, 0.7988079862448956, 0.8740896585046851], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 56.416643482632935, 'batch_acquisition_elapsed_time': 332.040729010012})
