store = {}
store['args']={'experiment_description': 'COVID BINARY:RESNET BN DROPOUT RANDOM (SCRATCH)', 'batch_size': 16, 'scoring_batch_size': 32, 'test_batch_size': 64, 'validation_set_size': 500, 'early_stopping_patience': 3, 'epochs': 30, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 20, 'target_num_acquired_samples': 1000, 'target_accuracy': 0.9375, 'quickquick': False, 'seed': 1997, 'log_interval': 20, 'initial_samples_per_class': 25, 'initial_samples': None, 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 3, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'no_cuda': False, 'local_rank': 0, 'experiment_task_id': 'covid_full_resnet_binary_scratch_random_1997', 'experiments_laaos': './experiment_configs/EMORY_COVID/scratch_binary_config.py', 'type': 'AcquisitionFunction.random', 'acquisition_method': 'AcquisitionMethod.independent', 'dataset': 'DatasetEnum.covid_binary'}
store['cmdline']=['MIP/BatchBALD/src/run_experiment.py', '--experiment_task_id=covid_full_resnet_binary_scratch_random_1997', '--experiments_laaos=./experiment_configs/EMORY_COVID/scratch_binary_config.py', '--dataset=covid_binary', '--type=random', '--acquisition_method=independent']
store['Distribution of training set classes:']={1: 1395, 0: 228}
store['Distribution of validation set classes:']={1: 199, 0: 33}
store['Distribution of test set classes:']={1: 399, 0: 65}
store['Distribution of pool classes:']={1: 1370, 0: 203}
store['Distribution of active set classes:']={0: 25, 1: 25}
store['active samples']=50
store['available samples']=1573
store['validation samples']=232
store['test samples']=464
store['iterations']=[]
store['initial_samples']=[1616, 686, 27, 171, 929, 797, 878, 702, 1121, 564, 1159, 1368, 1255, 533, 1055, 172, 370, 1080, 1536, 998, 1152, 215, 962, 272, 1226, 305, 608, 1110, 453, 1308, 631, 802, 443, 288, 573, 1266, 91, 552, 40, 150, 966, 1053, 541, 1562, 18, 1175, 668, 1566, 865, 192]
store['iterations'].append({'num_epochs': 5, 'test_metrics': {'accuracy': 0.7629310344827587, 'nll': 0.6341920392266636, 'f1': 0.6614935667860459, 'precision': 0.6489028213166144, 'recall': 0.7655677655677655, 'ROC_AUC': 0.7987622578003988, 'PRC_AUC': 0.961416835665975, 'specificity': 0.7655677655677655}, 'chosen_targets': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], 'chosen_samples': [1292, 121, 1525, 1537, 445, 828, 564, 573, 562, 622, 1517, 1230, 595, 273, 532, 295, 1378, 567, 1331, 222], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 118.87216331297532, 'batch_acquisition_elapsed_time': 0.0004761680029332638})
store['iterations'].append({'num_epochs': 7, 'test_metrics': {'accuracy': 0.8599137931034483, 'nll': 0.6074850805874529, 'f1': 0.7508405825836245, 'precision': 0.7244623655913979, 'recall': 0.7962020435704646, 'ROC_AUC': 0.8697778482158842, 'PRC_AUC': 0.9768352779369118, 'specificity': 0.7962020435704646}, 'chosen_targets': [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'chosen_samples': [765, 604, 87, 903, 1173, 798, 733, 301, 1278, 793, 310, 1019, 605, 495, 397, 585, 1192, 642, 763, 1528], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 164.77954087709077, 'batch_acquisition_elapsed_time': 0.0004593080375343561})
store['iterations'].append({'num_epochs': 10, 'test_metrics': {'accuracy': 0.8836206896551724, 'nll': 1.1316475703798492, 'f1': 0.7755080098914096, 'precision': 0.7585825027685493, 'recall': 0.7971081550028918, 'ROC_AUC': 0.8753512371771021, 'PRC_AUC': 0.9824117689478461, 'specificity': 0.7971081550028918}, 'chosen_targets': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], 'chosen_samples': [1485, 713, 845, 735, 565, 1201, 1192, 1078, 1277, 862, 748, 1137, 629, 1453, 1461, 704, 642, 930, 1271, 1191], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 233.9418107329402, 'batch_acquisition_elapsed_time': 0.00046116113662719727})
store['iterations'].append({'num_epochs': 5, 'test_metrics': {'accuracy': 0.8060344827586207, 'nll': 0.5440558071794181, 'f1': 0.7089327534292406, 'precision': 0.6842720583178599, 'recall': 0.8099479467900521, 'ROC_AUC': 0.9215232084966576, 'PRC_AUC': 0.978777186993093, 'specificity': 0.8099479467900521}, 'chosen_targets': [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], 'chosen_samples': [760, 211, 112, 1199, 1177, 1390, 270, 1265, 267, 255, 1506, 0, 216, 826, 869, 59, 789, 696, 337, 69], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 119.08598028495908, 'batch_acquisition_elapsed_time': 0.00048390193842351437})
store['iterations'].append({'num_epochs': 5, 'test_metrics': {'accuracy': 0.8814655172413793, 'nll': 3.534504068308863, 'f1': 0.651208878319461, 'precision': 0.80820649938297, 'recall': 0.6155581260844418, 'ROC_AUC': 0.7960681305165058, 'PRC_AUC': 0.9449410164658734, 'specificity': 0.6155581260844418}, 'chosen_targets': [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], 'chosen_samples': [482, 1174, 663, 1259, 225, 547, 899, 1216, 1447, 393, 277, 1464, 1069, 85, 223, 1103, 1296, 731, 562, 859], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 119.36152661009692, 'batch_acquisition_elapsed_time': 0.0004715658724308014})
store['iterations'].append({'num_epochs': 8, 'test_metrics': {'accuracy': 0.896551724137931, 'nll': 1.1642975642763336, 'f1': 0.773502013586625, 'precision': 0.7901633691107375, 'recall': 0.7595527279737806, 'ROC_AUC': 0.91430109155345, 'PRC_AUC': 0.980426731448929, 'specificity': 0.7595527279737806}, 'chosen_targets': [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], 'chosen_samples': [671, 1380, 404, 900, 1089, 673, 850, 1424, 683, 309, 642, 583, 747, 791, 19, 134, 748, 590, 846, 947], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 188.85351163591258, 'batch_acquisition_elapsed_time': 0.00048466306179761887})
store['iterations'].append({'num_epochs': 7, 'test_metrics': {'accuracy': 0.8987068965517241, 'nll': 2.261053940345501, 'f1': 0.7019421323820849, 'precision': 0.9036404771698889, 'recall': 0.6513398881819934, 'ROC_AUC': 0.9202823498376911, 'PRC_AUC': 0.9846809742387889, 'specificity': 0.6513398881819934}, 'chosen_targets': [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], 'chosen_samples': [301, 1130, 521, 480, 693, 549, 465, 21, 474, 489, 1129, 770, 570, 610, 1449, 1412, 120, 526, 1121, 946], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 165.81498013599776, 'batch_acquisition_elapsed_time': 0.00047186389565467834})
store['iterations'].append({'num_epochs': 14, 'test_metrics': {'accuracy': 0.9245689655172413, 'nll': 0.806869967230435, 'f1': 0.8403570340224327, 'precision': 0.847335901139464, 'recall': 0.8337960285328707, 'ROC_AUC': 0.8972844357601719, 'PRC_AUC': 0.9876085282968127, 'specificity': 0.8337960285328707}, 'chosen_targets': [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'chosen_samples': [641, 3, 195, 840, 1165, 434, 1276, 86, 1045, 367, 1367, 378, 637, 1098, 590, 476, 906, 1036, 802, 901], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 328.2084421971813, 'batch_acquisition_elapsed_time': 0.0004632289055734873})
store['iterations'].append({'num_epochs': 7, 'test_metrics': {'accuracy': 0.9094827586206896, 'nll': 0.4268190120828563, 'f1': 0.8212438084755092, 'precision': 0.8070279928528886, 'recall': 0.8379024484287643, 'ROC_AUC': 0.9513593652441448, 'PRC_AUC': 0.9906950540159472, 'specificity': 0.8379024484287643}, 'chosen_targets': [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], 'chosen_samples': [486, 169, 1281, 343, 585, 933, 597, 138, 744, 1072, 470, 218, 612, 774, 1152, 694, 252, 1215, 1395, 683], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 165.68819288397208, 'batch_acquisition_elapsed_time': 0.00045499810948967934})
store['iterations'].append({'num_epochs': 13, 'test_metrics': {'accuracy': 0.9461206896551724, 'nll': 0.7425511458824421, 'f1': 0.8812047477137033, 'precision': 0.9077380952380952, 'recall': 0.8592057065741276, 'ROC_AUC': 0.9169546004746476, 'PRC_AUC': 0.9932164239536998, 'specificity': 0.8592057065741276}, 'chosen_targets': [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], 'chosen_samples': [214, 1231, 664, 959, 678, 633, 1228, 1014, 501, 371, 594, 603, 933, 67, 525, 680, 1330, 1114, 41, 727], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 305.0015715567861, 'batch_acquisition_elapsed_time': 0.0004657928366214037})
