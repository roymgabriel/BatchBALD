store = {}
store['args']={'experiment_description': 'COVID MULTI:RESNET BN DROPOUT RANDOM (SCRATCH)', 'batch_size': 16, 'scoring_batch_size': 32, 'test_batch_size': 64, 'validation_set_size': 500, 'early_stopping_patience': 3, 'epochs': 30, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 20, 'target_num_acquired_samples': 1000, 'target_accuracy': 0.7025, 'quickquick': False, 'seed': 1234, 'log_interval': 20, 'initial_samples_per_class': 25, 'initial_samples': None, 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 3, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'no_cuda': False, 'experiment_task_id': 'covid_full_resnet_multi_no_mild_scratch_random_1234', 'experiments_laaos': './experiment_configs/EMORY_COVID/scratch_multi_no_mild_config.py', 'type': 'AcquisitionFunction.random', 'acquisition_method': 'AcquisitionMethod.independent', 'dataset': 'DatasetEnum.covid_multi'}
store['cmdline']=['MIP/BatchBALD/src/run_experiment.py', '--experiment_task_id=covid_full_resnet_multi_no_mild_scratch_random_1234', '--experiments_laaos=./experiment_configs/EMORY_COVID/scratch_multi_no_mild_config.py', '--dataset=covid_multi', '--type=random', '--acquisition_method=independent']
store['Distribution of training set classes:']={2: 809, 1: 582, 0: 232}
store['Distribution of validation set classes:']={1: 87, 0: 29, 2: 116}
store['Distribution of test set classes:']={2: 232, 0: 65, 1: 167}
store['Distribution of pool classes:']={2: 784, 1: 557, 0: 207}
store['Distribution of active set classes:']={1: 25, 0: 25, 2: 25}
store['active samples']=75
store['available samples']=1548
store['validation samples']=232
store['test samples']=464
store['iterations']=[]
store['initial_samples']=[915, 280, 362, 68, 1359, 1566, 800, 1428, 1355, 156, 1093, 1388, 243, 222, 1525, 1301, 953, 1404, 1420, 492, 741, 160, 119, 51, 1293, 1426, 1272, 1365, 538, 21, 1321, 392, 451, 636, 864, 1546, 664, 252, 1425, 477, 1098, 801, 562, 290, 871, 780, 1458, 368, 835, 324, 308, 1110, 1306, 1320, 894, 947, 377, 1405, 225, 1052, 977, 1241, 82, 24, 1285, 1222, 1234, 1198, 537, 155, 999, 1014, 842, 1219, 830]
store['iterations'].append({'num_epochs': 9, 'test_metrics': {'accuracy': 0.5668103448275862, 'nll': 1.956859325540477, 'f1': 0.46121962983059017, 'precision': 0.4768144499178982, 'recall': 0.5416378119093378, 'ROC_AUC': 0.7265625, 'PRC_AUC': 0.6103855677115568, 'specificity': 0.7433267730454663}, 'chosen_targets': [1, 2, 2, 1, 2, 2, 2, 1, 1, 0, 0, 2, 2, 2, 1, 0, 2, 2, 1, 1], 'chosen_samples': [311, 781, 868, 1400, 1098, 57, 1453, 612, 1102, 195, 1411, 1264, 28, 827, 763, 1503, 569, 1513, 209, 1273], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 360.9436925537884, 'batch_acquisition_elapsed_time': 0.0004950608126819134})
store['iterations'].append({'num_epochs': 11, 'test_metrics': {'accuracy': 0.6120689655172413, 'nll': 1.443548794450431, 'f1': 0.5562046057360998, 'precision': 0.7041210670314637, 'recall': 0.5273949448582941, 'ROC_AUC': 0.77178955078125, 'PRC_AUC': 0.6334646185327326, 'specificity': 0.7683942309622891}, 'chosen_targets': [1, 2, 0, 2, 1, 2, 2, 2, 2, 2, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1], 'chosen_samples': [309, 502, 1144, 854, 590, 1359, 845, 768, 1280, 370, 637, 956, 342, 360, 301, 1211, 247, 190, 902, 1321], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 441.66271560499445, 'batch_acquisition_elapsed_time': 0.0005594599060714245})
store['iterations'].append({'num_epochs': 5, 'test_metrics': {'accuracy': 0.5431034482758621, 'nll': 1.012701363399111, 'f1': 0.42732347973269563, 'precision': 0.485653113970913, 'recall': 0.44875964251867617, 'ROC_AUC': 0.717041015625, 'PRC_AUC': 0.5960689101566373, 'specificity': 0.7190365033680218}, 'chosen_targets': [1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2], 'chosen_samples': [492, 236, 1023, 881, 150, 752, 931, 313, 1472, 738, 536, 68, 715, 902, 1481, 1168, 1091, 357, 306, 23], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 203.0297090858221, 'batch_acquisition_elapsed_time': 0.0005057333037257195})
store['iterations'].append({'num_epochs': 8, 'test_metrics': {'accuracy': 0.646551724137931, 'nll': 1.058724962431809, 'f1': 0.5897261300713567, 'precision': 0.6360832848288046, 'recall': 0.5992698952228169, 'ROC_AUC': 0.80010986328125, 'PRC_AUC': 0.7000867056838139, 'specificity': 0.7876049696981337}, 'chosen_targets': [1, 2, 0, 2, 0, 0, 1, 0, 0, 1, 0, 1, 1, 2, 0, 2, 2, 2, 1, 0], 'chosen_samples': [282, 530, 555, 1074, 1058, 9, 1050, 1142, 381, 1175, 62, 166, 172, 419, 1423, 1170, 721, 1077, 597, 154], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 322.76948291715235, 'batch_acquisition_elapsed_time': 0.0005661221221089363})
store['iterations'].append({'num_epochs': 10, 'test_metrics': {'accuracy': 0.6099137931034483, 'nll': 1.4122039531839305, 'f1': 0.5682056497111655, 'precision': 0.595086321381142, 'recall': 0.5532526459018303, 'ROC_AUC': 0.78253173828125, 'PRC_AUC': 0.6397959870937976, 'specificity': 0.7771805646125065}, 'chosen_targets': [1, 1, 2, 1, 2, 2, 2, 1, 0, 2, 2, 1, 1, 1, 2, 0, 2, 1, 2, 2], 'chosen_samples': [375, 283, 318, 558, 162, 1319, 813, 744, 1440, 1223, 12, 1181, 229, 110, 354, 591, 373, 140, 19, 819], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 403.58814859203994, 'batch_acquisition_elapsed_time': 0.0006196768954396248})
store['iterations'].append({'num_epochs': 5, 'test_metrics': {'accuracy': 0.6228448275862069, 'nll': 0.8224599772486193, 'f1': 0.5649175037414317, 'precision': 0.6193025433620152, 'recall': 0.5454299623564541, 'ROC_AUC': 0.78948974609375, 'PRC_AUC': 0.6470218075379024, 'specificity': 0.7781052829449684}, 'chosen_targets': [1, 2, 2, 2, 2, 1, 2, 0, 2, 2, 1, 1, 1, 2, 1, 2, 2, 0, 1, 2], 'chosen_samples': [1101, 331, 832, 406, 464, 1012, 1351, 610, 1205, 556, 706, 395, 477, 816, 979, 5, 687, 595, 1055, 136], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 203.43813816504553, 'batch_acquisition_elapsed_time': 0.0005515040829777718})
store['iterations'].append({'num_epochs': 6, 'test_metrics': {'accuracy': 0.5581896551724138, 'nll': 1.0150716058139144, 'f1': 0.45454895945736956, 'precision': 0.5854037403740374, 'recall': 0.4519881986689751, 'ROC_AUC': 0.7669677734375, 'PRC_AUC': 0.6002631646283358, 'specificity': 0.743083290194603}, 'chosen_targets': [2, 2, 0, 1, 2, 1, 2, 2, 1, 1, 2, 2, 0, 2, 2, 1, 0, 1, 1, 1], 'chosen_samples': [521, 369, 1247, 29, 402, 1161, 795, 836, 1369, 183, 1364, 761, 1288, 1344, 794, 790, 210, 748, 1258, 590], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 243.43516615685076, 'batch_acquisition_elapsed_time': 0.000566242728382349})
store['iterations'].append({'num_epochs': 6, 'test_metrics': {'accuracy': 0.6206896551724138, 'nll': 0.724642852257038, 'f1': 0.561786466455497, 'precision': 0.6118315111450122, 'recall': 0.5434339543724223, 'ROC_AUC': 0.7933349609375, 'PRC_AUC': 0.6684730465606895, 'specificity': 0.7775843082104426}, 'chosen_targets': [1, 2, 1, 2, 1, 1, 0, 0, 0, 2, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2], 'chosen_samples': [1224, 455, 39, 1336, 1317, 533, 172, 215, 113, 881, 62, 1282, 237, 1274, 350, 658, 1086, 108, 1269, 621], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 243.4622802240774, 'batch_acquisition_elapsed_time': 0.0005802433006465435})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.5366379310344828, 'nll': 0.7954359383418642, 'f1': 0.38546085100706956, 'precision': 0.4238986980560015, 'recall': 0.49120909374884186, 'ROC_AUC': 0.70538330078125, 'PRC_AUC': 0.5857648934394759, 'specificity': 0.7332146690888374}, 'chosen_targets': [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 0, 1, 2, 1, 0, 1, 1, 1, 0, 1], 'chosen_samples': [582, 227, 686, 568, 990, 539, 1151, 951, 401, 1133, 1098, 138, 590, 304, 1264, 978, 1280, 1326, 1068, 40], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 164.29100247984752, 'batch_acquisition_elapsed_time': 0.0005580061115324497})
store['iterations'].append({'num_epochs': 13, 'test_metrics': {'accuracy': 0.7025862068965517, 'nll': 0.8040301881987473, 'f1': 0.6843185663908274, 'precision': 0.6998644593428672, 'recall': 0.6743201925062342, 'ROC_AUC': 0.85107421875, 'PRC_AUC': 0.7238593848123526, 'specificity': 0.8280391271921822}, 'chosen_targets': [2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 0, 1, 1, 1, 1, 2, 2, 2, 2], 'chosen_samples': [208, 79, 996, 1184, 600, 369, 243, 278, 911, 286, 827, 296, 635, 669, 481, 1070, 1226, 926, 58, 70], 'chosen_samples_score': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 523.3835839116946, 'batch_acquisition_elapsed_time': 0.0005672401748597622})
